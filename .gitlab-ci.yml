# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

variables:
  AWS_REGISTRY: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  ECR_NAME: dimgroz-ecr-dr

stages:          
  - runner_test
  - test
  - update_ECR

prologue-job:
  stage: runner_test
  script:
    - echo "Runner is starting . . ."

compile-and-test-backend:
  stage: test
  image: eclipse-temurin:21-jdk
  before_script:
    - apt-get update && apt-get install -y maven
  script:
    - cd backend2/MyChoiceApp/MyChoiceApp
    - mvn test

aws-job-frontend:
  stage: update_ECR
  image: docker:latest
  services:
    - docker:23.0.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache python3 py3-pip
    - python3 -m venv /venv
    - . /venv/bin/activate
    - pip install awscli
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_REGISTRY
  script:
    - docker build -t app-frontend ./frontend

    - NEW_TAG="v$CI_PIPELINE_ID"

    - docker tag app-frontend $AWS_REGISTRY/$ECR_NAME:frontend-0.0.$NEW_TAG
    
    - docker push $AWS_REGISTRY/$ECR_NAME:frontend-0.0.$NEW_TAG
  
  when: manual

aws-job-backend:
  stage: update_ECR
  image: docker:latest
  services:
    - docker:23.0.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache python3 py3-pip
    - python3 -m venv /venv
    - . /venv/bin/activate
    - pip install awscli
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_REGISTRY
  script:
    - docker build -t app-backend ./backend2

    - NEW_TAG="v$CI_PIPELINE_ID"

    - docker tag app-backend $AWS_REGISTRY/$ECR_NAME:backend-0.0.$NEW_TAG
    
    - docker push $AWS_REGISTRY/$ECR_NAME:backend-0.0.$NEW_TAG

  when: manual
